version: "3"

volumes:
  data-primary:
  data-replica:
  data-remote:
  trustanchors:
  cabundle:

networks:
  site1-lan:
    name: site1-lan
  site2-lan:
    name: site2-lan
  site-to-site-tunnel:
    name: tunnel
  wan:
    name: wan

services:
  trust:
    container_name: trust
    image: ${TRUST_IMAGE}:${TRUST_IMAGE_TAG}
    environment:
      - FORCE_TRUST_ANCHORS_UPDATE=1
    volumes:
      - trustanchors:/etc/grid-security/certificates
      - cabundle:/etc/pki

  db-primary:
    container_name: db-primary
    image: ${DB_IMAGE}:${DB_IMAGE_TAG}
    volumes:
      - data-primary:/var/lib/mysql
      - ./assets/db-logs:/var/log/mysql
      - ./assets/db-primary:/docker-entrypoint-initdb.d
      - ./assets/mysql-conf/primary.cnf:/etc/mysql/conf.d/primary.cnf
      - ./assets/certs:/certs
      - trustanchors:/etc/grid-security/certificates
    env_file:
      - env-files/db.env
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 0s
    networks:
      site1-lan:
        aliases:
          - db-primary.test.example

  db-replica:
    container_name: db-replica
    image: ${DB_IMAGE}:${DB_IMAGE_TAG}
    depends_on:
        db-primary:
          condition: service_healthy
    volumes:
      - data-replica:/var/lib/mysql
      - ./assets/db-logs:/var/log/mysql
      - ./assets/db-replica:/docker-entrypoint-initdb.d
      - ./assets/mysql-conf/replica.cnf:/etc/mysql/conf.d/replica.cnf
      - ./assets/certs:/certs
      - trustanchors:/etc/grid-security/certificates
    env_file:
      - env-files/db.env
    environment:
      - REPORT_HOST=db-replica.test.example
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 0s
    networks:
      site1-lan:
        aliases:
         - db-replica.test.example
      site-to-site-tunnel:
        aliases:
         - db-replica.test.example

  db-remote:
    container_name: db-remote
    image: ${DB_IMAGE}:${DB_IMAGE_TAG}
    depends_on:
        db-replica:
          condition: service_healthy
    volumes:
      - data-remote:/var/lib/mysql
      - ./assets/db-logs:/var/log/mysql
      - ./assets/db-remote:/docker-entrypoint-initdb.d
      - ./assets/mysql-conf/remote.cnf:/etc/mysql/conf.d/remote.cnf
      - ./assets/certs:/certs
      - trustanchors:/etc/grid-security/certificates
    env_file:
      - env-files/db.env
    environment:
      - REPORT_HOST=db-remote.test.example
    ports:
      - "3308:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 0s
    networks:
      site2-lan:
        aliases:
         - db-remote.test.example
      site-to-site-tunnel:
        aliases:
         - db-remote.test.example
  
  vomsaa-primary:
    container_name: vomsaa-primary
    image: ${VOMS_AA_IMAGE}:${VOMS_AA_IMAGE_TAG}
    env_file:
      - env-files/voms.env
    environment:
      - IAM_DB_HOST=db-primary.test.example
      - VOMS_HOST=voms-primary.test.example
      - VOMS_PORT=443
    ports:
      - "1044:1044"
    depends_on:
      db-primary:
        condition: service_healthy
    volumes:
      - ./assets/vomsaa:/workspace/config:ro
      - ./assets/certs/voms.test.example.cert.pem:/etc/grid-security/voms/hostcert.pem:ro
      - ./assets/certs/voms.test.example.key.pem:/etc/grid-security/voms/hostkey.pem:ro
      - trustanchors:/etc/grid-security/certificates
    networks:
      site1-lan:
        aliases:
          - vomsaa-primary.test.example

  vomsaa-replica:
    container_name: vomsaa-replica
    image: ${VOMS_AA_IMAGE}:${VOMS_AA_IMAGE_TAG}
    env_file:
      - env-files/voms.env
    environment:
      - IAM_DB_HOST=db-replica.test.example
      - VOMS_HOST=voms-replica.test.example
      - VOMS_PORT=443
    ports:
      - "1045:1044"
    depends_on:
      db-replica:
        condition: service_healthy
    volumes:
      - ./assets/vomsaa:/workspace/config:ro
      - ./assets/certs/voms.test.example.cert.pem:/etc/grid-security/voms/hostcert.pem:ro
      - ./assets/certs/voms.test.example.key.pem:/etc/grid-security/voms/hostkey.pem:ro
      - trustanchors:/etc/grid-security/certificates
    networks:
      site1-lan:
        aliases:
          - vomsaa-replica.test.example

  vomsaa-remote:
    container_name: vomsaa-remote
    image: ${VOMS_AA_IMAGE}:${VOMS_AA_IMAGE_TAG}
    env_file:
      - env-files/voms.env
    environment:
      - IAM_DB_HOST=db-remote.test.example
      - VOMS_HOST=voms-remote.test.example
      - VOMS_PORT=443
    ports:
      - "1046:1044"
    depends_on:
      db-remote:
        condition: service_healthy
    volumes:
      - ./assets/vomsaa:/workspace/config:ro
      - ./assets/certs/voms.test.example.cert.pem:/etc/grid-security/voms/hostcert.pem:ro
      - ./assets/certs/voms.test.example.key.pem:/etc/grid-security/voms/hostkey.pem:ro
      - trustanchors:/etc/grid-security/certificates
    networks:
      site2-lan:
        aliases:
          - vomsaa-remote.test.example

  ngx-primary:
    container_name: ngx-primary
    image: ${NGINX_IMAGE}:${NGINX_IMAGE_TAG}
    depends_on: 
      vomsaa-primary: 
        condition: service_started
      trust:
        condition: service_completed_successfully
    environment:
      TZ: Europe/Rome
      X509_VOMS_DIR: /vomsdir
    ports:
      - "443:443"
    volumes:
      - cabundle:/igtf
      - trustanchors:/etc/grid-security/certificates
      - ./assets/certs:/certs
      - ./assets/nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./assets/nginx/conf.d/voms-primary.test.example.conf:/etc/nginx/conf.d/voms-primary.test.example.conf:ro
    networks:
      site1-lan:
      wan:
        aliases:
          - voms-primary.test.example

  ngx-replica:
    container_name: ngx-replica
    image: ${NGINX_IMAGE}:${NGINX_IMAGE_TAG}
    depends_on: 
      vomsaa-replica:
        condition: service_started
      trust:
        condition: service_completed_successfully
    environment:
      TZ: Europe/Rome
      X509_VOMS_DIR: /vomsdir
    ports:
      - "444:443"
    volumes:
      - cabundle:/igtf
      - trustanchors:/etc/grid-security/certificates
      - ./assets/certs:/certs
      - ./assets/vomsdir:/vomsdir
      - ./assets/nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./assets/nginx/conf.d/voms-replica.test.example.conf:/etc/nginx/conf.d/voms-replica.test.example.conf:ro
    networks:
      site1-lan:
      wan:
        aliases:
          - voms-replica.test.example

  ngx-remote:
    container_name: ngx-remote
    image: ${NGINX_IMAGE}:${NGINX_IMAGE_TAG}
    depends_on: 
      vomsaa-remote:
        condition: service_started
      trust:
        condition: service_completed_successfully
    environment:
      TZ: Europe/Rome
      X509_VOMS_DIR: /vomsdir
    ports:
      - "445:443"
    volumes:
      - cabundle:/igtf
      - trustanchors:/etc/grid-security/certificates
      - ./assets/certs:/certs
      - ./assets/vomsdir:/vomsdir
      - ./assets/nginx/conf.d/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./assets/nginx/conf.d/voms-remote.test.example.conf:/etc/nginx/conf.d/voms-remote.test.example.conf:ro
    networks:
      site2-lan:
      wan:
        aliases:
          - voms-remote.test.example

  client:
    container_name: client
    image: ${GRID_CLIENTS_IMAGE}:${GRID_CLIENTS_IMAGE_TAG}
    environment:
      TZ: Europe/Rome
    depends_on:
      trust:
        condition: service_completed_successfully
    volumes:
      - cabundle:/etc/pki
      - trustanchors:/etc/grid-security/certificates
      - ./assets/vomsdir:/etc/grid-security/vomsdir
      - ./assets/vomses:/etc/vomses
    entrypoint: sleep infinity
    networks:
      wan:

  testsuite:
    image: italiangrid/voms-testsuite:latest
    init: true
    depends_on:
      trust:
        condition: service_completed_successfully
    environment:
      - TZ=Europe/Rome
      - "ROBOT_OPTIONS=--variable vo1:indigo-dc 
                       --variable vo1_host:voms-primary.test.example 
                       --variable vo1_issuer:'/C=IT/O=IGI/CN=*.test.example' 
                       --variable vo1_legacy_fqan_enabled:True
                       --variable vo2:test.vo --variable vo1_host:voms-dev.cloud.cnaf.infn.it 
                       --variable vo2_issuer:'/DC=org/DC=terena/DC=tcs/C=IT/ST=Roma/O=Istituto Nazionale di Fisica Nucleare/CN=voms-dev.cloud.cnaf.infn.it' 
                       --variable vo2_legacy_fqan_enabled:True"
    volumes:
      - trustanchors:/etc/grid-security/certificates
      - ./assets/vomses:/etc/vomses
      - ./assets/vomsdir:/etc/grid-security/vomsdir
      - ./voms-testsuite:/home/test/voms-testsuite
    working_dir: /home/test/voms-testsuite
    command: ["sleep", "infinity"]
    networks:
      wan: